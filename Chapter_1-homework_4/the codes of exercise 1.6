# -*- coding: utf-8 -*-
"""
Created on Mon Apr 11 22:28:41 2016

@author: luokaifa
"""

import numpy as np
from pylab import *

def draw_pic(a,b,N0):
    a = float(a)
    b = float(b)
    N0 = float(N0)
    error = []
    N_approx = []
    N_precise = []
    N.append(N0)
    
    if b == 0:
        final = np.inf
        max_t = 0.4
    else:
        final = a/b
        max_t = np.log(final*9)/a
        
    t = np.linspace(0,max_t,1000)
    #Euler method 数值解
    for i in range(999):
        N_approx_temp = N[i]+(a*N[i]-b*N[i]**2)*t[1]
        N_approx.append(N_approx_temp)
        N_precise_temp = ((a*np.exp(a*(t[i]-t[0]))/(a/N0-b+b*np.exp(a*(t[i]-t[0]))
        N_precise.append(N_precise_temp)
        error_temp = N_precise_temp - N_aaprox_temp
        error.append(error_temp)
    #绘图
    subplot(211)
    figure(figsize=(14,6))
    plot(t,n,label="Theory",color="red",linewidth=1)
    plot(t,N,label="Simulation",color="yellow",linewidth=3,linestyle='-.')      
    xlabel("Time(t)")
    ylabel("population(n)")
    title("Population growth problems")
    axis([0,max_t,min(N)*0.9,max(N)*1.1])
    legend(loc='best')
    subplot(212)
    plot(t,error,label="the difference of theory and simulation",color="red",linewidth=3,linestyle='--')      
    xlabel("Time(t)")
    ylabel("population(n)")
    title("Population growth problems")
    axis([0,max_t,min(N)*0.9,max(N)*1.1])
    legend(loc='best')
    savefig(str(a+b+N0)+'.png')
    show(fig_all)

print 'when b=0, population growth curve'        
draw_pic(30,0,1000)
print 'when N0 is small,a=10,b=3, population growth curve'
draw_pic(10,3,10)
print 'when N0=1000,a=10,b=0.01, population growth curve'
draw_pic(10,0.01,1000)
print 'Now you can draw your curve'
a = raw_input('input the coefficient of first-order:')
b = raw_input('input the coefficient of second-order:')
N0 = raw_input('input initial number N0:')
draw_pic(a,b,N0)
